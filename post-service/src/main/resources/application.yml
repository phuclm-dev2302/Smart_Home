spring:
  application:
    name: post-service
  datasource:
    url: jdbc:postgresql://localhost:5000/post-service
    username: postgres
    password: 123456
  jpa:
    hibernate:
      ddl-auto: update
    show-sql: true
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
  # Resource Server
  security:
    oauth2:
      resourceserver:
        jwt:
          issuer-uri: http://localhost:8181/realms/spring-boot-microservices-realm
  # Kafka
  kafka:
    bootstrap-servers: localhost:29092
    template:
      default-topic: "notificationTopic"
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
      spring.json.type.mapping: CreatePostEvent:org.example.commonevent.common.event.CreatePostEvent,CreatePostDocumentEvent:org.example.commonevent.common.event.CreatePostDocumentEvent

server:
  port: 8082

# Register Eureka Server
eureka:
  client:
    service-url:
      defaultUrl: http://localhost:8761/eureka
    register-with-eureka: true
    fetch-registry: true
  instance:
    prefer-ip-address: true

# Zipkin
management:
  tracing:
    sampling:
      probability: 1.0
  metrics:
    export:
      prometheus:
        enabled: true
  zipkin:
    tracing:
      endpoint: http://localhost:9411/api/v2/spans

# Logging
logging:
  level:
    org.springframework.security: DEBUG
    org.springframework.web.reactive.function.client.ExchangeFunctions: INFO
    reactor.netty.http.client: INFO
    reactor.netty: INFO
